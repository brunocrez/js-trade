{"version":3,"sources":["../../app-es6/database/TradeDao.js"],"names":["Trade","TradeDao","conn","_conn","_store","trade","Promise","resolve","reject","req","transaction","objectStore","add","onsuccess","onerror","console","log","event","target","error","cursor","openCursor","tradeList","current","result","data","value","push","_date","_quantity","_value","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,iB,gBAAAA,K;;;;;;;;;;;;;;;;;;;;;gCAEIC,Q;AAET,kCAAYC,IAAZ,EAAkB;AAAA;;AACd,yBAAKC,KAAL,GAAaD,IAAb;AACA,yBAAKE,MAAL,GAAc,QAAd;AACH;;;;yCAEIC,K,EAAO;AAAA;;AACR,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,MAAM,MAAKN,KAAL,CACLO,WADK,CACO,CAAC,MAAKN,MAAN,CADP,EACsB,WADtB,EAELO,WAFK,CAEO,MAAKP,MAFZ,EAGLQ,GAHK,CAGDP,KAHC,CAAV;;AAKAI,gCAAII,SAAJ,GAAgB,iBAAS;AACrBN;AACH,6BAFD;;AAIAE,gCAAIK,OAAJ,GAAc,iBAAS;AACnBC,wCAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,uCAAO,sDAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;8CAES;AAAA;;AACN,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,KAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,YAAY,EAAhB;;AAEAF,mCAAOP,SAAP,GAAmB,iBAAS;AACxB,oCAAIU,UAAUN,MAAMC,MAAN,CAAaM,MAA3B;AACA,oCAAID,OAAJ,EAAa;AACT,wCAAIE,OAAOF,QAAQG,KAAnB;AACAJ,8CAAUK,IAAV,CAAe,IAAI3B,KAAJ,CAAUyB,KAAKG,KAAf,EAAsBH,KAAKI,SAA3B,EAAsCJ,KAAKK,MAA3C,CAAf;AACAP,4CAAQQ,QAAR;AACH,iCAJD,MAIO;AACHxB,4CAAQe,SAAR;AACH;AACJ,6BATD;;AAWAF,mCAAON,OAAP,GAAiB,iBAAS;AACtBC,wCAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,uCAAO,6CAAP;AACH,6BAHD;AAIH,yBAvBM,CAAP;AAwBH;;;+CAEU;AAAA;;AACP,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,KAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGR4B,KAHQ,EAAb;;AAKAZ,mCAAOP,SAAP,GAAmB,iBAAS;AACxBN,wCAAQ,gCAAR;AACH,6BAFD;;AAIAa,mCAAON,OAAP,GAAiB,iBAAS;AACtBC,wCAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,uCAAO,gDAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH","file":"TradeDao.js","sourcesContent":["import { Trade } from '../models/Trade';\r\n\r\nexport class TradeDao {\r\n\r\n    constructor(conn) {\r\n        this._conn = conn;\r\n        this._store = 'trades';\r\n    }\r\n\r\n    save(trade) {\r\n        return new Promise((resolve, reject) => {\r\n            let req = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(trade);\r\n\r\n            req.onsuccess = event => {\r\n                resolve();\r\n            };\r\n\r\n            req.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong while trying to add new object!');\r\n            };\r\n        });\r\n    }\r\n\r\n    listAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let tradeList = [];\r\n\r\n            cursor.onsuccess = event => {\r\n                let current = event.target.result;\r\n                if (current) {\r\n                    let data = current.value;\r\n                    tradeList.push(new Trade(data._date, data._quantity, data._value));\r\n                    current.continue();\r\n                } else {\r\n                    resolve(tradeList);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong trying to list trades!');\r\n            };\r\n        });\r\n    }\r\n\r\n    clearAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            cursor.onsuccess = event => {\r\n                resolve('Database Cleared Successfully!');\r\n            };\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong trying to clear Database!');\r\n            };\r\n        });\r\n    }\r\n}"]}