{"version":3,"sources":["../../app-es6/database/TradeDao.js"],"names":["TradeDao","conn","_conn","_store","trade","Promise","resolve","reject","req","transaction","objectStore","add","onsuccess","onerror","console","log","event","target","error","cursor","openCursor","tradeList","current","result","data","value","push","Trade","_date","_quantity","_value","continue","clear"],"mappings":";;;;;;IAAMA,Q;AAEF,sBAAYC,IAAZ,EAAkB;AAAA;;AACd,aAAKC,KAAL,GAAaD,IAAb;AACA,aAAKE,MAAL,GAAc,QAAd;AACH;;;;6BAEIC,K,EAAO;AAAA;;AACR,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,MAAM,MAAKN,KAAL,CACLO,WADK,CACO,CAAC,MAAKN,MAAN,CADP,EACsB,WADtB,EAELO,WAFK,CAEO,MAAKP,MAFZ,EAGLQ,GAHK,CAGDP,KAHC,CAAV;;AAKAI,oBAAII,SAAJ,GAAgB,iBAAS;AACrBN;AACH,iBAFD;;AAIAE,oBAAIK,OAAJ,GAAc,iBAAS;AACnBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,sDAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH;;;kCAES;AAAA;;AACN,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,KAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,YAAY,EAAhB;;AAEAF,uBAAOP,SAAP,GAAmB,iBAAS;AACxB,wBAAIU,UAAUN,MAAMC,MAAN,CAAaM,MAA3B;AACA,wBAAID,OAAJ,EAAa;AACT,4BAAIE,OAAOF,QAAQG,KAAnB;AACAJ,kCAAUK,IAAV,CAAe,IAAIC,KAAJ,CAAUH,KAAKI,KAAf,EAAsBJ,KAAKK,SAA3B,EAAsCL,KAAKM,MAA3C,CAAf;AACAR,gCAAQS,QAAR;AACH,qBAJD,MAIO;AACHzB,gCAAQe,SAAR;AACH;AACJ,iBATD;;AAWAF,uBAAON,OAAP,GAAiB,iBAAS;AACtBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,6CAAP;AACH,iBAHD;AAIH,aAvBM,CAAP;AAwBH;;;mCAEU;AAAA;;AACP,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,KAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGR6B,KAHQ,EAAb;;AAKAb,uBAAOP,SAAP,GAAmB,iBAAS;AACxBN,4BAAQ,gCAAR;AACH,iBAFD;;AAIAa,uBAAON,OAAP,GAAiB,iBAAS;AACtBC,4BAAQC,GAAR,CAAYC,MAAMC,MAAN,CAAaC,KAAzB;AACAX,2BAAO,gDAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH","file":"TradeDao.js","sourcesContent":["class TradeDao {\r\n\r\n    constructor(conn) {\r\n        this._conn = conn;\r\n        this._store = 'trades';\r\n    }\r\n\r\n    save(trade) {\r\n        return new Promise((resolve, reject) => {\r\n            let req = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(trade);\r\n\r\n            req.onsuccess = event => {\r\n                resolve();\r\n            };\r\n\r\n            req.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong while trying to add new object!');\r\n            };\r\n        });\r\n    }\r\n\r\n    listAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let tradeList = [];\r\n\r\n            cursor.onsuccess = event => {\r\n                let current = event.target.result;\r\n                if (current) {\r\n                    let data = current.value;\r\n                    tradeList.push(new Trade(data._date, data._quantity, data._value));\r\n                    current.continue();\r\n                } else {\r\n                    resolve(tradeList);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong trying to list trades!');\r\n            };\r\n        });\r\n    }\r\n\r\n    clearAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._conn\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            cursor.onsuccess = event => {\r\n                resolve('Database Cleared Successfully!');\r\n            };\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject('Something went wrong trying to clear Database!');\r\n            };\r\n        });\r\n    }\r\n}"]}